/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.FileRead;
import Business.SpellChecker;
import com.cosine.similarity.DocumentParser;
import java.awt.CardLayout;
import java.util.HashMap;
import java.util.TreeMap;
import javax.swing.JPanel;

/**
 *
 * @author Jigar
 */
public class PhraseSearch extends javax.swing.JPanel {

    /**
     * Creates new form PhraseSearch
     */
    JPanel upc;
    FileRead fr; DocumentParser dp;
    String word;
    
    public PhraseSearch(JPanel upc, FileRead fr, DocumentParser dp) {
        initComponents();
        this.upc=upc;
        this.fr=fr;
        this.dp=dp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        inputSearchJTextField = new javax.swing.JTextField();
        findJButton = new javax.swing.JButton();

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        jLabel5.setText("Insert query");

        findJButton.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        findJButton.setText("Find");
        findJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(findJButton)
                    .addComponent(inputSearchJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(inputSearchJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(findJButton)
                .addContainerGap(197, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void findJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findJButtonActionPerformed
        // TODO add your handling code here:
        dp.fileRead("C:\\IR_TestFiles");
        String userQuery= (String)inputSearchJTextField.getText();
        Boolean flag=dp.checkQuery(userQuery);
        if(flag){
            QueryResullts qr = new QueryResullts(upc, dp.getNextList().get(userQuery), dp, userQuery);
            upc.add("QueryResults",qr);
            CardLayout layout = (CardLayout)upc.getLayout();
            layout.next(upc);
            return;
        }
        
        
        SpellChecker sc=new SpellChecker(fr.getHm());
        String choice=sc.run(userQuery);
        if (choice == "2" || choice == "3"){
            Long startTime1=System.nanoTime();
            System.out.println("startTime3"+startTime1);
            dp.parseQuery(userQuery);
            dp.querytfidfCalculator();
            HashMap<String, Double> queryCosineResults=dp.findCosineForUserQuery();
            Long endTime1=(System.nanoTime()-startTime1)/1000000000;
            System.out.println("endTime3"+endTime1);

            QueryResullts qr = new QueryResullts(upc, queryCosineResults, dp, userQuery);
            upc.add("QueryResults",qr);
            CardLayout layout = (CardLayout)upc.getLayout();
            layout.next(upc);

            System.out.println("CosineResults"+queryCosineResults.size());
        }
    }//GEN-LAST:event_findJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton findJButton;
    private javax.swing.JTextField inputSearchJTextField;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
